// =============================================================================
// VIEWPORT (Settings)
// =============================================================================


// Viewport map
// -----------------------------------------------------------------------------

$viewportMap: (
    largest: 1681px,
    larger: 1441px,
    large: 1281px,
    small: 961px,
    smaller: 841px,
    smallest: 601px
);


// Desktop viewport
// -----------------------------------------------------------------------------
// 1. This variable defines the viewport where you wish to change scales within
//    your settings. For example: _type-settings.scss contains a mixin called
//    @mixin fontSize, which bumps the font-size and line-height values from
//    the mobile scale to the desktop scale specified within that file.
//    You can re-use this variable for other areas, such as changing your
//    spacing settings or any other settings you wish to modify on larger
//    screens.
//
//    Choose any viewport name from the $viewportMap above.
//    For example: "large".
// -----------------------------------------------------------------------------

$desktopViewport: "large"; // 1




// Viewport mixin
// -----------------------------------------------------------------------------
// Use the viewport mixin within your selectors to add responsive code directly
// to the selector you're working on.
//
// 1. Media queries are typically min-width, scaling up with mobile first.
//    When there is a need for a max-width media query, the viewport size must
//    be reduced by 1px to ensure the correct viewport is targeted.
//    For example: (max-width: 1024px) opposed to (max-width: 1025px).
//
// Example use:
//    @include viewport("small") {
//        property: styles;
//    }
//
//    @include viewport("large", "max-width") {
//        property: styles;
//    }
// -----------------------------------------------------------------------------

@mixin viewport($size, $maxWidth: null) {
    @if $maxWidth == "max-width" {
        @media (max-width: (viewport($size) - 1px)) { // 1
            @content;
        }
    }
    @else {
        @media (min-width: viewport($size)) {
            @content;
        }
    }
}




// Viewport function
// -----------------------------------------------------------------------------

@function viewport($viewport) {
    @if map-has-key($viewportMap, $viewport) {
        @return map-get($viewportMap, $viewport);
    }
    @warn "Unknown viewport '#{$viewport}' specified in the viewport function.";
    @return null;
}
