// =============================================================================
// TYPOGRAPHY (Tools)
// =============================================================================


// Font-family map & function
// -----------------------------------------------------------------------------

$fontFamilyMap: (
    heading:                $fontFamily--heading,
    text:                   $fontFamily--text,
    hero:                   $fontFamily--hero,
    numeric:                $fontFamily--numeric,
    code:                   $fontFamily--code
);

@function fontFamily($key) {
    @if map-has-key($fontFamilyMap, $key) {
        @return map-get($fontFamilyMap, $key);
    }

    @warn "Unknown font-family `#{$key}` in $fontFamilyMap.";
    @return null;
}


// Font-weight map
// -----------------------------------------------------------------------------

// scss-lint:disable ColorKeyword,ColorVariable
$fontWeightMap: (
    thin:                   $fontWeight--thin,
    normal:                 $fontWeight--normal,
    semibold:               $fontWeight--semibold,
    bold:                   $fontWeight--bold,
    black:                  $fontWeight--black
);
// scss-lint:enable ColorKeyword,ColorVariable

@function fontWeight($key) {
    @if map-has-key($fontWeightMap, $key) {
        @return map-get($fontWeightMap, $key);
    }

    @warn "Unknown font-weight `#{$key}` in $fontWeightMap.";
    @return null;
}


// Font-size map
// -----------------------------------------------------------------------------

$fontSizeRootMap: (
    small:                  $fontSize--rootSmall,
    medium:                 $fontSize--rootMedium,
    large:                  $fontSize--rootLarge
);

@function fontSizeRoot($key) {
    @if map-has-key($fontSizeRootMap, $key) {
        @return map-get($fontSizeRootMap, $key);
    }

    @warn "Unknown font-size `#{$key}` in $fontSizeRootMap.";
    @return null;
}


$fontSizeMap: (
    base:                   1rem,
    hero:                   $fontSize--hero,
    largest:                $fontSize--largest,
    larger:                 $fontSize--larger,
    large:                  $fontSize--large,
    small:                  $fontSize--small,
    smaller:                $fontSize--smaller,
    smallest:               $fontSize--smallest,
    tiny:                   $fontSize--tiny
);

@function fontSize($key) {
    @if map-has-key($fontSizeMap, $key) {
        @return map-get($fontSizeMap, $key);
    }

    @warn "Unknown font-size `#{$key}` in $fontSizeMap.";
    @return null;
}


// Text Kerning
// -----------------------------------------------------------------------------
//
// 1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
// 2. Chrome (not Windows), Firefox, IE 10+
// 3. Safari 7 and future browsers
//
// -----------------------------------------------------------------------------

@mixin textKern($important: null) {
    // Appearance
    text-rendering: optimizeLegibility $important; // 1
    font-feature-settings: "kern" 1 $important; // 2
    font-kerning: normal $important; // 3
}


// Text Truncate
// -----------------------------------------------------------------------------
//
// 1. Ensure that the node has a maximum width after which truncation
//    can occur.
// 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
//    nodes.
//
// -----------------------------------------------------------------------------

@mixin textTruncate($important: null) {
    // Layout
    max-width: 100% $important; // 1
    // Appearance
    overflow: hidden $important;
    text-overflow: ellipsis $important;
    white-space: nowrap $important;
    word-wrap: normal $important; // 2
}
